<project name="DerbyNet-docs" default="dist" basedir="."
	 xmlns:if="ant:if" xmlns:unless="ant:unless">
   <description>
       Documentation for installation and operation of DerbyNet software
   </description>

   <property name="dist"  location="dist"/>

   <!-- Set soffice for Windows if that's where we are, otherwise use
	standard (Mac) value -->
   <condition property="soffice"
	      value="C:\Program Files\LibreOffice\program\soffice.exe">
     <os family="windows"/>
   </condition>
   <property name="soffice"
	     location="/Applications/LibreOffice.app/Contents/MacOS/soffice"/>
   <condition property="is_windows">
     <os family="windows"/>
   </condition>

   <available property="soffice_available" file="${soffice}"/>

   <target name="dist" depends="installation, after-installation, operation,
                                advanced-topics, quickref">
   </target>

   <target name="make-dist-dir">
       <mkdir dir="${dist}"/>
   </target>

  <mapper type="glob" from="*.fodt" to="*.pdf"/>

   <macrodef name="make-pdf">
       <attribute name="file"/>
       <sequential>
           <local name="pdf.uptodate"/>

            <!-- This check doesn't work on Windows. It always returns true-->
           <uptodate property="pdf.uptodate" srcfile="@{file}">
               <mapper type="regexp" from="^(.*)/(.*)\.fodt$" to="\1/dist/\2.pdf"/>
           </uptodate>

           <echo if:true="${pdf.uptodate}">pdf for @{file} is up to date</echo>
           
           <exec executable="${soffice}" unless:true="${pdf.uptodate}">
	           <!-- This UserInstallation variable avoids any conflict with another
		            running LibreOffice on Mac, but doesn't seem to work on
		            Windows. -->
               <arg unless:set="is_windows"
		            value="-env:UserInstallation=file:///tmp/LibreOffice_Conversion_${USER}"/>
               <arg value="--headless"/>
               <arg value="--convert-to"/>
               <arg value="pdf:writer_pdf_Export"/>
               <arg value="--outdir"/>
               <arg value="${dist}"/>
               <arg value="@{file}"/>
           </exec>
       </sequential>
   </macrodef>
   
 <target name="installation" depends="make-dist-dir">
     <make-pdf file="Installation- Debian.fodt"/>
     <make-pdf file="Installation- Mac.fodt"/>
     <make-pdf file="Installation- Windows.fodt"/>
     <make-pdf file="Installation- Docker.fodt"/>
 </target>

 <target name="after-installation" depends="make-dist-dir">
     <make-pdf file="Advanced Database Set-Up for DerbyNet.fodt"/>
     <make-pdf file="Sharing a Database With GPRM.fodt"/>
 </target>

 <target name="operation" depends="make-dist-dir">
     <make-pdf file="Default Roles and Passwords.fodt"/>
     <make-pdf file="Timer Operation.fodt"/>
     <make-pdf file="Running a Race with DerbyNet.fodt"/>
     <make-pdf file="Photo Capture Stand.fodt"/>
     <make-pdf file="Photo Upload Options.fodt"/>
     <make-pdf file="Secure Contexts and DerbyNet.fodt"/>
     <make-pdf file="Live Streaming DerbyNet.fodt"/>
     <make-pdf file="Online Balloting in DerbyNet.fodt"/>
 </target>

 <target name="advanced-topics" depends="make-dist-dir">
     <make-pdf file="Developers- Timer Messages.fodt"/>
     <make-pdf file="Developers- Replay Messages.fodt"/>
 </target>

 <target name="quickref" depends="make-dist-dir">
     <make-pdf file="Quick Reference.fodt"/>
 </target>

 <target name="clean" description="clean up" >
    <!-- Delete the ${dist} directory tree -->
    <delete dir="${dist}"/>
 </target>

</project>
